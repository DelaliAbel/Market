@page "/RazorComponent/BlazorJS"
@inject IJSRuntime _JsRuntime

<h3>Blazor JS</h3>
<div>
    <button class="btn btn-secondary m-2" style="width:200px" @onclick="TestConfirmBox">Test confirm Box</button>
</div>

<div>
    <button class="btn btn-success m-2" style="width:200px" @onclick="TestSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="TestFailure">Toastr Failure</button>
</div>
<div>
    <button class="btn btn-success m-2" style="width:200px" @onclick="SweetTestSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="SweetTestFailure">SweetAlert Failure</button>
</div>

<div class="row">

    @if(ConfirmResult)
    {
        <p>Confirmation has been made !</p>
    }
    else
    {
        <p>Confirmation pending !</p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    public async void TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }
    public async void TestSuccess()
    {
        //await _JsRuntime.InvokeVoidAsync("ShowToastr", "success", "Success");
        //En cas d'extension
        await _JsRuntime.ToatrSuccess("Operation Successful");
    }
    public async void TestFailure()
    {
        //await _JsRuntime.InvokeVoidAsync("ShowToastr", "error","Error");
        await _JsRuntime.ToatrError("Operation Error");
    }

    public async void SweetTestSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Success");
    }
    public async void SweetTestFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "error","Error");
    }
}
