<div class="modal fade" data-backdrop="static" data-keyboard="false" id="deleteConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close" @onclick="()=>DeleteConfirmation_Click(false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete
            </div>
            <div class="modal-footer">
                @if(isParentProcessing)
                {
                    <button type="button" disabled class="btn btn-secondary" data-bs-dismiss="modal" @onclick="()=>DeleteConfirmation_Click(false)">
                        Cancel
                    </button>
                    <button type="button" disabled class="btn btn-danger" @onclick="()=>DeleteConfirmation_Click(true)">
                        Processing...
                    </button>
                }
                else
                {
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="()=>DeleteConfirmation_Click(false)">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger" @onclick="()=>DeleteConfirmation_Click(true)">
                        Delete
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    //[Parameter]
    public bool IsConfirmed { get; set; }
    [Parameter]
    public bool isParentProcessing { get; set; }

    [Parameter]
    public EventCallback<bool> OnDeleteConfirmation_Click { get; set; }

    public void DeleteConfirmation_Click(bool i_isConfirm)
    {
        if (i_isConfirm)
        {
            OnDeleteConfirmation_Click.InvokeAsync(i_isConfirm);
        }
    }
}
